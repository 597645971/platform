<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.platform.dao.sys.FuncDao">

	
	<insert id="insertFunc" parameterType="com.platform.model.entity.sys.Function">
		INSERT INTO gx_function(
			ID，
			PARENT_ID，
			NAME，
			URL，
			STATUS_ID，
			CREATE_ID，
			CREATE_DATE，
			UPDATE_ID，
			UPDATE_DATE
		)VALUES(
			#{id},
			#{parentId},
			#{name},
			#{url},
			#{statusId},
			#{createId},
			CURRENT_TIMESTAMP,
			#{createId},
			CURRENT_TIMESTAMP
		)
	</insert>
	<update id="updateFunc" parameterType="com.platform.model.entity.sys.Function">
		UPDATE gx_function SET
			<if test="null != name">NAME = #{name},</if>
			<if test="null != url">URL = #{url},</if>
			<if test="null != statusId">STATUS_ID = #{statusId},</if>
			<if test="null != updateId">UPDATE_ID = #{updateId},</if>
			UPDATE_DATE = CURRENT_TIMESTAMP
		WHERE ID = #{id}
	</update>
	
	<delete id="deleteFuncById" parameterType="String">
		DELETE FROM gx_function WHERE ID = #{id, jdbcType=VARCHAR}
	</delete>
	
	<!-- 角色和权限的关系 -->
	<insert id="insertFuncRole" parameterType="com.platform.model.entity.sys.FunctionRole">
		INSERT INTO gx_function_role()	
			ROLE_ID,
			FUNCTION_ID,
			CREATE_ID,
			CREATE_DATE,
			UPDATE_ID,
			UPDATE_DATE
		)VALUES(
			#{roleId},
			#{functionId},
			#{createId},
			CURRENT_TIMESTAMP,
			#{updateId},
			CURRENT_TIMESTAMP
		)
	</insert>
	<delete id="deleteFuncRole" parameterType="String">
		DELETE FROM gx_function_role WHERE FUNCTION_ID = #{funcId} AND ROLE_ID = #{roleId}
	</delete>
	<!-- 角色和权限的关系 -->
	
</mapper>